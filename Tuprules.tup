base = $(TUP_CWD)
src_base = $(base)/src
include_base = $(base)/include
lib_base = $(base)/lib

ifndef BUILD_SHARED
  BUILD_SHARED=0
endif

ifndef BUILD_DEBUG
  BUILD_DEBUG=1
endif

ifeq ($(BUILD_DEBUG),0)
  CFLAGS += -O4
else
  CFLAGS += -g -O0
endif

CFLAGS += -Wall -m64
CFLAGS += -I "$(include_base)"
CFLAGS += -fvisibility=hidden

CXXFLAGS += -std=c++11 -stdlib=libc++

LDFLAGS += -lc++
LDFLAGS += -arch x86_64

# OpenSSL
CFLAGS += `pkg-config openssl --cflags`
LDFLAGS += `pkg-config openssl --libs`

ifneq ($(BUILD_SHARED),0)
  CFLAGS += -dynamic
endif

ifeq (@(TUP_PLATFORM),macosx)
  lib_shared_ext = dylib
  CFLAGS += -fblocks
  CFLAGS += -DTARGET_OS_MAC
  CXXFLAGS += -ObjC++
  LDFLAGS += -framework Cocoa
endif
ifeq (@(TUP_PLATFORM),linux)
  lib_shared_ext = so
  CFLAGS += -DTARGET_OS_LINUX
endif
ifeq (@(TUP_PLATFORM),win32)
  lib_shared_ext = dll
  CFLAGS += -DTARGET_OS_WINDOWS
endif
ifeq (@(TUP_PLATFORM),freebsd)
  lib_shared_ext = so
  CFLAGS += -DTARGET_OS_BSD
endif

c_files = *.c *.m
cxx_files = *.cpp *.cc *.cxx *.mm
object_files = *.o

# Add globs for module objects
module_objects += $(src_base)/$(object_files)
module_objects += $(src_base)/types/$(object_files)
module_objects += $(src_base)/string/$(object_files)
module_objects += $(src_base)/data/$(object_files)
module_objects += $(src_base)/logging/$(object_files)

lib_name = snow-common
lib_version = 0.0.2
lib_static_name = lib$(lib_name).$(lib_version).a
lib_shared_name = lib$(lib_name).$(lib_version).$(lib_shared_ext)

ifndef CC
  CC = clang
endif

ifndef CXX
  CXX = clang++
endif

ifndef LD
  LD = ld
endif

ifndef AR
  AR = ar -rcs
endif

!cc_file = |> $(CC) $(CFLAGS) $(LDFLAGS) -o %o %f |> %B
!cxx_file = |> $(CXX) $(CFLAGS) $(CXXFLAGS) $(LDFLAGS) -o %o %f |> %B
!cc_object = |> $(CC) $(CFLAGS) -c -o %o %f |> %B.o
!cxx_object = |> $(CXX) $(CFLAGS) $(CXXFLAGS) -c -o %o %f |> %B.o
!cxx_bin = |> $(CXX) $(CFLAGS) $(CXXFLAGS) $(LDFLAGS) -o %o %f |>
ifeq ($(BUILD_SHARED),1)
  !cxx_tests_bin = | $(lib_base)/$(lib_shared_name) |> $(CXX) $(CFLAGS) $(CXXFLAGS) $(LDFLAGS) $(lib_base)/$(lib_shared_name) -o %o %f |>
else
  !cxx_tests_bin = | $(lib_base)/$(lib_static_name) |> $(CXX) $(CFLAGS) $(CXXFLAGS) $(LDFLAGS) $(lib_base)/$(lib_static_name) -o %o %f |>
endif
!ar_lib = |> $(AR) %o %f |>
!ld_exe = |> $(CXX) %f $(LDFLAGS) -ObjC -o %o |>
